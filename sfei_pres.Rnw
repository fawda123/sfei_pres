\documentclass[serif]{beamer}
\usetheme{Boadilla}
\usepackage{graphicx}
\usepackage[final]{animate}
\usepackage{breqn}
\usepackage{xcolor}
\usepackage{booktabs}
\usepackage{tikz}
\usetikzlibrary{decorations.pathreplacing}
\usetikzlibrary{shapes,arrows,positioning,shadows}
\usepackage{subfig}
\usepackage{pgf}
\usepackage{caption}

% change format of enumerated lists
\setbeamertemplate{enumerate items}[default]
\setbeamertemplate{navigation symbols}{}

% change font size for figure captions
\setbeamerfont{caption}{size=\scriptsize}

% custom colors
<<mypal, echo = F, results = 'asis', cache = T>>=
pal <- function(x) RColorBrewer::brewer.pal(x, 'GnBu')
num_col <- 5

for(i in 1:num_col){
 
  col.nm <- paste0('mypal',i)
  hexa <- paste0(gsub('#', '', pal(5)[i]))
  cat(paste0('\\definecolor{', col.nm,'}{HTML}{',hexa,'}'))
  
}

bg_col <- pal(num_col)[1]

pdf('fig/back_tmp.pdf',bg = bg_col)
frame()
invisible(dev.off())
@

% title graphic
<<echo = F, cache = TRUE, eval = F, message = F, results = 'hide'>>=
data(h2dat)

nomod <-  filter(h2dat, resvar == 'no23') %>% 
  .$mod %>% 
  .[[1]]

nhmod <- filter(h2dat, resvar == 'nh') %>% 
  .$mod %>% 
  .[[1]]

# globals
ylab1 <- expression(paste(NO [2] ^ '-', ' / ', NO [3] ^ '2-', ' (mg ', L^-1, ')'))
ylab2 <- expression(paste(NH [4] ^ '+', ' (mg ', L^-1, ')'))
flolab <- expression(paste('ln-Flow (', m^3, ' ', s^-1, ')'))

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = "#7BCCC4"),
    panel.grid.minor = element_blank(), 
    plot.margin = unit(c(3, 3, 3, 3), 'pt')
  )   
col_vec <- RColorBrewer::brewer.pal(9, 'Blues')[c(9, 8, 7)]
dynacol_vec <- RColorBrewer::brewer.pal(9, 'Spectral')
xlims <- range(nomod$date)

# observed time series
toplo1 <- select(nomod, date, res) %>% 
  na.omit()
toplo2 <- select(nhmod, date, res) %>% 
  na.omit()
p1 <- ggplot(toplo1, aes(x = date, y = exp(res))) + 
  geom_line() + 
  mytheme + 
  scale_y_continuous(ylab1) +
  theme(
    axis.title.x = element_blank()
  ) +
  scale_x_date(limits = xlims) 
p2 <- ggplot(toplo2, aes(x = date, y = exp(res))) + 
  geom_line() + 
  mytheme + 
  scale_y_continuous(ylab2) +
  theme(
    axis.title.x = element_blank()
  ) +
  scale_x_date(limits = xlims)  

# prdnrmplots
p3 <- prdnrmplot(nomod, logspace = F, col_vec = col_vec, min_mo = 10) + 
  mytheme + 
  scale_y_continuous(ylab1) +
  theme(
    legend.position = 'none', 
    legend.title = element_blank(),
    axis.title.x = element_blank()
  ) +
  scale_x_date(limits = xlims) 
p4 <- prdnrmplot(nhmod, logspace = F, col_vec = col_vec, min_mo = 10) + 
  mytheme + 
  scale_y_continuous(ylab2) +
  theme(
    legend.position = 'none',
    legend.title = element_blank(),
    axis.title.x = element_blank()
  ) +
  scale_x_date(limits = xlims) 

# align widths of plots in first column, first two
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
pC <- ggplot_gtable(ggplot_build(p3))
pD <- ggplot_gtable(ggplot_build(p4))

maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3], pC$widths[2:3], pD$widths[2:3])

# Set the widths
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth
pC$widths[2:3] <- maxWidth
pD$widths[2:3] <- maxWidth

pdf('fig/titlegraphic.pdf', height = 2, width = 18, family = 'serif')
grid.arrange(arrangeGrob(pA, pC, pB, pD, ncol = 4))
dev.off()
@

\tikzstyle{decision} = [diamond, draw, text width=6em, text badly centered, inner sep = 2pt, top color=white, bottom color=mypal3, drop shadow]
\tikzstyle{block} = [rectangle, draw, text width=10em, text centered, rounded corners, minimum height=3em, minimum width=8em, top color = white, bottom color=mypal4,  drop shadow]
\tikzstyle{declare} = [rectangle, draw, text width=10em, text centered, minimum height=3em, minimum width=8em, top color = white, bottom color=mypal5,  drop shadow]

% knitr setup
<<setup, include = F, cache = F>>=
# set global chunk options
library(knitr)
opts_chunk$set(fig.path='fig/', fig.align='center', fig.show='hold',message=F,echo=F,results='asis',dev='pdf',dev.args=list(family='serif'),fig.pos='!ht',warning=F)
options(replace.assign=T,width=90)
@

% dependent data
<<dep_dat, include = F, cache = F>>=
source('R/funcs.R')
library(WRTDStidal)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(purrr)
library(tidyr)
library(Hmisc)
library(ggrepel)
library(lubridate)
@

% get online bib file
<<echo = FALSE, cache = FALSE>>=
refs <- httr::GET('https://raw.githubusercontent.com/fawda123/refs/master/refs.bib')
refs <- rawToChar(refs$content)
writeLines(refs, con = file('refs.bib'))
@

% figure used on title page
<<title_fig, echo = F, results = 'hide', message = F, eval = T>>=
# pdf('fig/title_plo.pdf', width = 12, height =3.5, family = 'serif')
# print(p1)
# invisible(dev.off())
@

\setbeamercolor{title}{fg=mypal5} % main title
\setbeamercolor{frametitle}{fg=mypal4, bg=mypal2} % frame titles
\setbeamercolor{structure}{fg=mypal4} % bottom banner
\setbeamercolor{normal text}{fg=mypal5}
\usebackgroundtemplate{\includegraphics[height=\paperheight,width=\paperwidth]{fig/back_tmp.pdf}}

% macros
\newcommand{\emtxt}[1]{\textbf{\textit{#1}}}

\begin{document}

\title[Evaluation of Delta RMP data]{\textbf{Evaluation of Delta RMP nutrient data using weighted regression for trend analysis}}
\author[M. Beck]{Marcus W. Beck, PhD}

\institute[SCCWRP]{Southern California Coastal Water Research Project, \href{mailto:marcusb@sccwrp.org}{marcusb@sccwrp.org}, Phone: 7147553217}

\date{April 9, 2019}

\titlegraphic{\includegraphics[width=\linewidth]{fig/titlegraphic.pdf}}

%%%%%%
\begin{frame}[shrink]
\vspace{0.2in}
\titlepage
\end{frame}

\section{Background}

%%%%%%
\begin{frame}{\textbf{Evaluating Delta RMP data}}{}
\onslide<+->
\emtxt{Today's talk}: Evaluation of forty years of Delta water quality data from the Routine Monitoring Program (RMP) \\~\\
\onslide<+->
Water quality trends in the Delta: \\~\\
\begin{itemize}
\item \emtxt{Part 1}: Model theory and application \\~\\
\item \emtxt{Part 2}: Trends over time and selected case study \\~\\
\item \emtxt{Part 3}: Use of data science tools to reach environmental managers \\~\\
\end{itemize}
\end{frame}

\section{Model theory and background}

<<echo = F, cache = TRUE, eval = T, message = F, results = 'hide'>>=
data("mods_nolag")

pal <- function(x) RColorBrewer::brewer.pal(x, 'GnBu')
num_col <- 5

# model subset and plot subsets
row <- 7
mod <- mods_nolag$mod[[row]]
ylab <-  expression(paste("DIN (mg ", L^-1, ")"))
xlims <- as.Date(c('1976-01-01', '2013-12-31'))
ylims <- c(0, 6)

annuals <- prdnrmplot(mod, annuals = TRUE, plot = F) %>%
  .$nrms %>% 
  filter(taus == 0.5)
seasnls <- prdnrmplot(mod, annuals = FALSE, plot = F) %>%
  .$nrms %>% 
  filter(taus == 0.5)
residus <- select(mod, date, res, fit0.5) %>% 
  mutate(resfit = exp(res) - exp(fit0.5)) %>% 
  na.omit()

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = pal(num_col)[3]),
    panel.grid.minor = element_line(colour = pal(num_col)[2])
    )   

# plots
p1 <- ggplot(na.omit(mod), aes(x = date, y = exp(res))) + 
  geom_line() +
  mytheme +
  scale_y_continuous(ylab, limits = c(0, 4)) + 
  scale_x_date('Time', limits = xlims)

p2 <- ggplot(annuals, aes(x = date, y = exp(nrms_value))) + 
  geom_line() + 
  mytheme +
  scale_y_continuous(ylab, limits = c(0, 4)) + 
  theme(
    axis.title.x = element_text(size = 8),
    axis.title.y = element_text(size = 8)
    ) + 
  scale_x_date('Time', limits = xlims) + 
  ggtitle('Annual')

p3 <- ggplot(seasnls, aes(x = date, y = exp(nrms_value))) + 
  geom_line() + 
  mytheme +
  scale_y_continuous(ylab) + 
  scale_x_date('Time', limits = xlims) + 
  theme(
    axis.title.x = element_text(size = 8),
    axis.title.y = element_text(size = 8)
    ) + 
  ggtitle('Seasonal')

p4 <- ggplot(residus, aes(x = date, y = resfit)) + 
  geom_point() + 
  geom_hline(aes(yintercept = 0)) + 
  mytheme +
  scale_y_continuous(ylab) + 
  theme(
    axis.title.x = element_text(size = 8),
    axis.title.y = element_text(size = 8)
    ) + 
  scale_x_date('Time', limits = xlims) + 
  ggtitle('Residual')

p5 <- dynaplot(mod, mo = 1, logspace = F, years = c(1976, 2000, 2013), col_vec = 'black') + 
  mytheme +
  theme(
    legend.position = 'none', 
    strip.text.x = element_blank(),
    axis.title.x = element_text(size = 8),
    axis.title.y = element_text(size = 8)
    ) + 
  scale_y_continuous(ylab) + 
  scale_x_continuous('Flow') + 
  ggtitle('Flow effects')

pdf('fig/ts_ex.pdf', height = 2, width = 12, family = 'serif')
p1
dev.off()

ht <- 1.75
wd <- 4.5

pdf('fig/schematic2.pdf', height = ht, width = wd, family = 'serif')
p2
dev.off()
pdf('fig/schematic3.pdf', height = ht, width = wd, family = 'serif')
p3
dev.off()
pdf('fig/schematic4.pdf', height = ht, width = wd, family = 'serif')
p4
dev.off()
pdf('fig/schematic5.pdf', height = ht, width = wd, family = 'serif')
p5
dev.off()
@

%%%%%%
\begin{frame}[t]{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
{\bf \centerline{Observed data represents effects of many processes}}
\vspace{0.15in}
\centerline{\includegraphics[width = \textwidth]{fig/ts_ex.pdf}}
\vspace{0.15in}
\begin{columns}[t]
\begin{column}{0.3\textwidth}
{\bf \underline{\emtxt{Climate}}}\\
precipitation\\
temperature\\
wind events\\
ENSO effects
\end{column}
\begin{column}{0.3\textwidth}
{\bf \underline{\emtxt{Local}}}\\
light/turbidity\\
residence time\\
invasive species\\
trophic effects
\end{column}
\begin{column}{0.3\textwidth}
{\bf \underline{\emtxt{Regional/historical}}}\\
watershed inputs\\
point sources\\
management actions
flow changes
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}[t]{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
\onslide<+->
{\bf \centerline{Observed data represents effects of many processes}}
\vspace{0.15in}
\centerline{\includegraphics[width = \textwidth]{fig/ts_ex.pdf}}
\centerline{Models should describe components to evaluate effects}
\vspace{-0.1in}
\begin{columns}[t]
\begin{column}{0.5\textwidth}
\onslide<+->{
\centerline{\includegraphics[width = 0.8\textwidth]{fig/schematic2.pdf}}
\centerline{\includegraphics[width = 0.8\textwidth]{fig/schematic3.pdf}}
}
\end{column}
\begin{column}{0.5\textwidth}
\onslide<+->{
\centerline{\includegraphics[width = 0.8\textwidth]{fig/schematic4.pdf}}
\centerline{\includegraphics[width = 0.8\textwidth]{fig/schematic5.pdf}}
}
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}[t]{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
\onslide<+->
\emtxt{Problem:} Response endpoints of eutrophication vary naturally over time and with discharge or tidal patterns\\~\\
\emtxt{Solution:} Apply a model that accounts for changes in relationships between drivers of pollution over time \cite{Beck18b} \\~\\
\onslide<+->
The \emtxt{weighted regression (WRTDS)} approach models pollutants in rivers as a function of \emtxt{time}, \emtxt{discharge}, and \emtxt{season} \cite{Hirsch10}\\~\\
\onslide<+->
\emtxt{Adaptation:} Applied to Tampa Bay \cite{Beck15}, further validated/compared in Patuxent Estuary \cite{Beck17}
\end{frame}

%%%%%%
\begin{frame}[t]{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
\onslide<1->
How does weighted regression work?  
\begin{center}
$\ln\left(N\right) = \beta_0 + \beta_1 t + \beta_2 Sal + \beta_3 \sin\left(2\pi t\right) + \beta_4 \cos\left(2\pi t\right)$\\~\\
$N$: nitrogen (or other response endpoint)\\
$t$: time\\
$Sal$: Salinity (or other flow-related variable)
\end{center}
\includegraphics<2>[width = \textwidth, page = 1]{fig/wrtds_pieces.pdf}
\includegraphics<3>[width = \textwidth, page = 2]{fig/wrtds_pieces.pdf}
\includegraphics<4>[width = \textwidth, page = 3]{fig/wrtds_pieces.pdf}
\includegraphics<5>[width = \textwidth, page = 4]{fig/wrtds_pieces.pdf}
\includegraphics<6>[width = \textwidth, page = 5]{fig/wrtds_pieces.pdf}
\end{frame}

<<wtex, echo = F, results = 'hide', message = F, eval = F>>=
load('data/epc_tb_dat.RData')
load('data/epc_est_act.RData')

pal <- function(x) RColorBrewer::brewer.pal(x, 'GnBu')
num_col <- 5

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = pal(num_col)[3]),
    panel.grid.minor = element_line(colour = pal(num_col)[2])
    )   

dat.in <- data.frame(tb.dat, pred = epc.est.act$fit.md)
dat.in <- dat.in[dat.in$year>=2000 & dat.in$year <=2010,]
dat.in <- dat.in[dat.in$seg=='Hillsborough Bay',]

row_exs <- 1:nrow(dat.in)

pdf('fig/wtex.pdf', height = 3.75, width = 8, family = 'serif')
for(row_ex in row_exs){
  
  cat(row_ex, '\t')
  
  ref.in<-dat.in[row_ex,]

  ##
  #random year, month, load, one year, wts separated
  ref.wt<-wt.fun(ref.in,dat.in,all=T)
  yr.sub<-format(dat.in$date.f,'%Y')==ref.in$year
  titles<-with(
    ref.in,
    c(as.character(month.name),year,substitute(italic(Sal[ff])~sal,list(sal=as.character(round(ref.in$sal.ref,2)))),
    'All'),
  )
  
  p1.dat<-data.frame(Month=dat.in$date.f[yr.sub],Wt=ref.wt[yr.sub,1])
  p1<-ggplot(p1.dat,aes(x=Month,y=Wt)) + 
    geom_line() + 
    ggtitle(titles[[1]]) +
    scale_y_continuous(name=element_blank(),limits=c(0,1)) +
    scale_x_date(date_labels="%b", name=element_blank()) +
    mytheme
  
  p2.dat<-data.frame(Date=dat.in$date.f,Wt=ref.wt[,2])
  p2<-ggplot(p2.dat,aes(x=Date,y=Wt)) + 
    geom_line() + 
    scale_x_date(name=element_blank(),breaks = as.Date(range(dat.in$date.f)), date_labels = "%Y") +
    scale_y_continuous(name=element_blank(),limits=c(0,1)) +
    ggtitle(titles[[2]]) +
    mytheme
  
  #p3 xlims
  p3x0 <- paste0(as.numeric(ref.in$year)-2,'-01-01')
  p3x1 <- paste0(as.numeric(ref.in$year)+2,'-01-01')
  p3.dat<-data.frame(Date=dat.in$date.f,Wt=ref.wt[,3],
    sal.ref=dat.in$sal.ref)
  yint<-which(dat.in$sal.ref==ref.in$sal.ref)
  p3<-ggplot(p3.dat,aes(x=Date,y=Wt)) + 
    geom_line() + 
    #geom_line(aes(y=sal.ref),col='red') + 
    geom_hline(yintercept=p3.dat[yint,'sal.ref'],col='black',lwd=1.4,lty=2) +
    scale_y_continuous(name=element_blank(),limits=c(0,1)) +
    scale_x_date(name=element_blank(),limits=as.Date(c(p3x0,p3x1)), breaks = as.Date(c(p3x0,p3x1)), date_labels = "%Y") +
    ggtitle(titles[[3]]) +
    mytheme
  
  p4.dat<-data.frame(Date=dat.in$date.f,Wt=ref.wt[,1]*ref.wt[,2]*ref.wt[,3])
  p4<-ggplot(p4.dat,aes(x=Date,y=Wt)) + 
    geom_line() + 
    scale_x_date(name=element_blank(),breaks = as.Date(range(dat.in$date.f)), date_labels = "%Y") +
    scale_y_continuous(name=element_blank(),limits=c(0,1)) +
    ggtitle(titles[[4]]) + 
    mytheme
  
  ##
  #ggplot showing point size and color in relation to total weight
  p.dat<-data.frame(
    Date=dat.in$date.f,
    Chla_ugl=dat.in$Chla_ugl,
    pred = dat.in$pred,
    sal.ref=dat.in$sal.ref,
    month.wt=ref.wt[,1],
    year.wt=ref.wt[,2],
    sal.wt=ref.wt[,3],
    all.wt=ref.wt[,1]*ref.wt[,2]*ref.wt[,3]
  )
  
  title.val<-substitute(
    mo~yr~italic(Sal[ff])~sal,
    list(mo=as.character(ref.in$month.name),yr=paste0(ref.in$year,', '),sal=as.character(round(ref.in$sal.ref,2)))
    )
   
  # predicted values to plot
  preds <- p.dat[1:row_ex, ]
  
  ylabs<-expression(paste('Chlorophyll-',italic(a),' (',italic('\u03bc'),'g ',L^-1,')'))
  p.dat.plo<-ggplot(p.dat,aes(x=Date,y=Chla_ugl)) +
    geom_point(aes(size=all.wt,colour=all.wt)) +
    scale_y_continuous(limit=c(0,4.5),name=ylabs) +
    scale_x_date(name=element_blank()) +
    scale_size(range=c(2,12)) +
    geom_line(data = preds, aes(x = Date, y = pred), size = 1.3, alpha = 0.6) +
    ggtitle(title.val) + 
    mytheme +
    scale_colour_gradientn(colours = pal(5)[2:5]) +
    theme(legend.position = 'none')
  
  grid.arrange(
      p.dat.plo,
      arrangeGrob(p1,p2,p3,p4,nrow=2,left=textGrob('Weights',rot=90)), ncol = 2
    )
}

dev.off()
@

%%%%%%
\begin{frame}{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
How does weighted regression work?
\begin{center}
\animategraphics[controls,width=\linewidth]{10}{fig/wtex}{}{} %frame rate is 12 per/sec
\end{center}
\end{frame}
 
%%%%%%
\begin{frame}[t]{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}}
{\small
\emtxt{Points}: observed time series (black are weighted, grey is zero weight)\\
\emtxt{Green point}: observation at the center of the regression\\
\emtxt{Blue line}: Global model with weights specific to the window\\
\emtxt{Red line}: Accumulated WRTDS model
}
\begin{center}
\animategraphics[controls,width=\linewidth]{10}{fig/wrtds_pieces2}{}{} %frame rate is 12 per/sec
\end{center}
\end{frame} 
 
<<map, echo = F, include = F, results = 'hide'>>=
# load required data
data(delt_dat)
data(delt_map)

pal <- function(x) RColorBrewer::brewer.pal(x, 'GnBu')
num_col <- 5
cols <- c('#D53E4F', '#4DAF4A', '#377EB8') # red, green, blue

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = alpha(pal(num_col)[3], 0.6)),
    panel.grid.minor = element_line(colour = alpha(pal(num_col)[2], 0.6)), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
    )   

##
# get a bounding box for the stations
statmeta <- select(delt_dat, Site_Code, Latitude, Longitude) %>% 
  unique

# flo variable locations
sacsjr <- data.frame(
  flovar = c('Sacramento R.', 'San Joaquin R.'), 
  Latitude = c(38.45602, 37.67604), 
  Longitude = c(-121.5013, -121.2663)
  )

# bounding box
buffx <- 0
buffy <- 0
lims<- select(statmeta, -Site_Code) %>% 
  rbind(sacsjr[, !names(sacsjr) %in% 'flovar']) %>% 
  apply(., 2, function(x) range(x, na.rm = TRUE))
lims <- c(
  (1 + buffx) * lims[1, 2], 
  (1 - buffy) * lims[1, 1], 
  (0.9995 - buffx) * lims[2, 2], 
  (1 + buffy) * lims[2, 1]
  )    
names(lims) <- c('left', 'bottom', 'right', 'top')

# base delta map
pdelta <- ggplot(delt_map, aes(x = long, y = lat)) + 
  geom_polygon(aes(group = group, fill = hole), colour = 'cornflowerblue') +
  mytheme + 
  coord_fixed(ratio = 1, xlim = lims[c(1, 3)], ylim = lims[c(2, 4)]) +
  scale_fill_manual(values = c("cornflowerblue", pal(num_col)[1]), guide = "none") +
  geom_label(data = sacsjr[1, ], aes(x = Longitude, y = Latitude, label = flovar), fill = cols[1]) +
  geom_label_repel(data = sacsjr[2, ], aes(x = Longitude, y = Latitude, label = flovar), fill = cols[1],
    point.padding = unit(0.4, "lines"), force = 2.5) +
  geom_label(data = statmeta, aes(x = Longitude, y = Latitude, label = Site_Code), fill = cols[2])

pdf('fig/stations.pdf', height = 3.5, width = 4.5, family = 'serif')
pdelta
dev.off()
@	     
 
%%%%%%
\begin{frame}{\textbf{Model theory and background}}{\textbf{WRTDS adaptation for tidal waters}} 
{\bf \centerline{Application to Delta}}
\begin{columns}
\begin{column}{0.45\textwidth}
\begin{itemize}
\item Nine stations (three Suisun, three middle, three delta) \\~\\
\item Three analytes (DIN, ammonium, nitrite/nitrate), two flow records \\~\\
\item Four decades of data, 1976-2013
\end{itemize}
\end{column}
\begin{column}{0.5\textwidth}
\begin{figure}
\begin{center}
\includegraphics[width = \textwidth]{fig/stations.pdf}
\caption{Stations (green) and flow estimates (red) modelled with WRTDS}
\end{center}
\end{figure}
\end{column}
\end{columns}
\end{frame}

\section{Trends}

<<eval = F, echo = F, results = 'hide', message = F>>=
data(delt_dat)
data(mods_nolag)
data(delt_map)

pal <- RColorBrewer::brewer.pal(5, 'GnBu')

colfun <- function(vals, pal = 'Spectral', ncol = 10){

  pal <- rev(RColorBrewer::brewer.pal(ncol, pal))
  palfun <- colorRamp(pal)
  
  valscl <- (vals - min(vals, na.rm = T)) / diff(range(vals, na.rm = T))
  valna <- is.na(valscl)
  cols <- palfun(valscl)
  out <- rep(NA, length = length(valscl))
  out[!valna] <- rgb(cols[!valna, ], maxColorValue=256)
  
  return(out)
  
}

##
# get a bounding box for the stations
statmeta <- select(delt_dat, Site_Code, Latitude, Longitude) %>% 
  unique

# aggregate all model fits by month, long format, add locations
modagg <- mods_nolag %>% 
  filter(resvar %in% 'din') %>% 
  mutate(mod = 
    map(mod, function(x){
      out <- group_by(x, year, month) %>% 
      summarise(
        fit = median(fit0.5, na.rm = T)
        )
      out
    })
  ) %>% 
  select(Site_Code, resvar, mod) %>% 
  unnest %>% 
  unite(date, year:month, sep = '-', remove = F) %>% 
  filter(year %in% c(1980:1989)) %>% 
  mutate(
    valsz = scales::rescale(fit, c(2, 17)),
    valcl = colfun(fit),
    date = as.Date(paste0(date, '-1'), format = '%Y-%m-%d'),
    month = factor(month, levels = c(1:12), labels = c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'))
    ) %>% 
  unite(datetxt, month:year, sep = ' ') %>% 
  left_join(., statmeta, by = 'Site_Code') 

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = alpha(pal[3], 0.6)),
    panel.grid.minor = element_line(colour = alpha(pal[2], 0.6)), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
    )   

# bounding box
buffx <- 0
buffy <- 0
lims<- select(statmeta, -Site_Code) %>% 
  apply(., 2, function(x) range(x, na.rm = TRUE))
lims <- c(
  (1 + buffx) * lims[1, 2], 
  (1 - buffy) * lims[1, 1], 
  (0.9995 - buffx) * lims[2, 2], 
  (1 + buffy) * lims[2, 1]
  )    
names(lims) <- c('left', 'bottom', 'right', 'top')

moyrs <- unique(modagg$date)

pdf('fig/trnds.pdf', height = 4.5, width = 9, family = 'serif')
for(moyr in moyrs){

  cat(moyr, '\t')
  toplo <- filter(modagg, date %in% moyr)
  
  p1 <- ggplot(delt_map, aes(x = long, y = lat)) + 
    geom_polygon(aes(group = group, fill = hole), colour = 'cornflowerblue') +
    mytheme + 
    coord_fixed(ratio = 1, xlim = lims[c(1, 3)], ylim = lims[c(2, 4)]) +
    scale_fill_manual(values = c("cornflowerblue", pal[1]), guide = "none") +
    geom_text(data = toplo, aes(x = Longitude + 0.07, y = Latitude, label = Site_Code)) + 
    geom_point(data = toplo, aes(x = Longitude, y = Latitude), 
      colour = toplo$valcl, 
      size = toplo$valsz,
      alpha = 0.85
      ) + 
    ggtitle(unique(toplo$datetxt))
  p2 <- ggplot(modagg, aes(x = date, y = fit)) + 
    geom_line() +
    mytheme + 
    theme(
      panel.grid.minor = element_blank(),
      axis.title.y = element_text(angle = 90),
      axis.text.y = element_text(size = 8)
    ) +
    scale_x_date(expand = c(0, 0)) + 
    geom_vline(xintercept = as.numeric(moyr)) + 
    geom_point(data = toplo, aes(x = date, y = fit), size = 2.5) + 
    facet_grid(Site_Code ~ .) + 
    scale_y_continuous('ln-DIN')

  grid.arrange(p2, p1, ncol = 2, widths = c(0.5, 1))
  
}
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Trends over time}}{\textbf{Nitrogen dynamics in the Delta}} 
{\bf \centerline{Predicted DIN trends, 1980-1990}}
\vspace{0.05in}
\centerline{
\animategraphics[controls,width=\linewidth]{7}{fig/trnds}{}{} %frame rate is 10 per/sec
}
\end{frame}

<<eval = F, echo = F, results = 'hide', message = F>>=
strip_col <- alpha('#377EB8', 0.5)

pdf('fig/trndsperdin.pdf', height = 6, width = 9, family = 'serif')
trnd_map(res = 'din', strp_fl = strip_col, leg = T)
dev.off()

pdf('fig/trndspernh.pdf', height = 6, width = 9, family = 'serif')
trnd_map(res = 'nh', strp_fl = strip_col, leg = T)
dev.off()

pdf('fig/trndsperno23.pdf', height = 6, width = 9, family = 'serif')
trnd_map(res = 'no23', strp_fl = strip_col, leg = T)
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Trends over time}}{\textbf{Nitrogen dynamics in the Delta - DIN}} 
\centerline{\includegraphics[width = 0.93\textwidth, page = 2]{fig/trndsperdin.pdf}}
\end{frame}

%%%%%%
\begin{frame}{\textbf{Trends over time}}{\textbf{Nitrogen dynamics in the Delta - ammonium}} 
\centerline{\includegraphics[width = 0.93\textwidth, page = 2]{fig/trndspernh.pdf}}
\end{frame}

%%%%%%
\begin{frame}{\textbf{Trends over time}}{\textbf{Nitrogen dynamics in the Delta - nitrite/nitrate}} 
\centerline{\includegraphics[width = 0.93\textwidth, page = 2]{fig/trndsperno23.pdf}}
\end{frame}

%%%%%%
\begin{frame}{\textbf{Trends over time}}{Nitrogen dynamics in the Delta}
Better description of nutrient endpoints can change conclusions
\centerline{\includegraphics[width = \textwidth]{fig/trndcomp1.pdf}}
\end{frame}

<<echo = F, cache = TRUE, eval = T, message = F, results = 'hide'>>=
data("mods_nolag")

pal <- function(x) RColorBrewer::brewer.pal(x, 'GnBu')
num_col <- 5

# model subset and plot subsets
row <- 7
mod <- mods_nolag$mod[[row]]
ylab <-  expression(paste("DIN (mg ", L^-1, ")"))
xlims <- as.Date(c('1976-01-01', '2013-12-31'))
ylims <- c(0, 6)

annuals <- prdnrmplot(mod, annuals = TRUE, plot = F) %>%
  .$nrms %>% 
  filter(taus == 0.5)
seasnls <- prdnrmplot(mod, annuals = FALSE, plot = F) %>%
  .$nrms %>% 
  filter(taus == 0.5)
residus <- select(mod, date, res, fit0.5) %>% 
  mutate(resfit = exp(res) - exp(fit0.5)) %>% 
  na.omit()

# default theme
mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = pal(num_col)[3]),
    panel.grid.minor = element_line(colour = pal(num_col)[2])
    )   

# plots
p1 <- ggplot(na.omit(mod), aes(x = date, y = exp(res))) + 
  geom_line() +
  mytheme +
  theme(
    axis.title.x = element_blank(), 
    axis.text.x = element_blank()
  ) + 
  scale_y_continuous('Obs DIN', limits = c(0, 4)) + 
  scale_x_date(limits = xlims)
p2 <- ggplot(na.omit(mod), aes(x = date, y = exp(fit0.5))) + 
  geom_line() +
  mytheme +
  scale_y_continuous('Pred DIN', limits = c(0, 4)) + 
  scale_x_date('Time', limits = xlims)

pdf('fig/ts_ex2.pdf', height = 3.5, width = 12, family = 'serif')
grid.arrange(p1, p2, ncol = 1, heights = c(0.85, 1), left = ylab)
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Trends over time}}{\textbf{Nitrogen dynamics in the Delta - nitrite/nitrate}} 
The \emtxt{WRTDS} approach lets us model historical trends in relation to \emtxt{time}, \emtxt{discharge}, and \emtxt{season}\\~\\
Predicted trends follow observed... how can we leverage the results to understand drivers of environmental change? \\~\\
\centerline{\includegraphics[width = \textwidth]{fig/ts_ex2.pdf}}
\end{frame}

\section{Selected case study}

%%%%%%
\begin{frame}{\textbf{Selected case studies}}{\textbf{Effects of biological invasion in Suisun Bay}}
\emtxt{Hypothesis}: Biological invasions by benthic filter feeders have shifted abundance and composition of phytoplankton in Suisun Bay \\~\\
We should be able to \emtxt{predict}: \\~\\
\begin{itemize}
\item A decline in annual, flow-normalized chlorophyll following increase in invaders\\~\\
\item Varying effects of flow given complex relationships between chlorophyll and invaders
\end{itemize}
\end{frame}

<<echo = F, cache = TRUE, eval = F, message = F, results = 'hide'>>=

# clam and model data at D7
data(clams)
data(h3dat)
data(flow_dat)
chld7 <- filter(h3dat, Site_Code %in% 'D7' & resvar %in% 'chl')$mod[[1]]

clmdat <- group_by(clams, yr, species) %>% 
  dplyr::summarize(
    clams_smp = mean(clams_smp, na.rm = TRUE),
    biomass = mean(biomass, na.rm = TRUE)
    ) %>% 
  ungroup %>% 
  mutate(yr = as.Date(paste0(yr, '-10-01')))

# make sure date range is same on both
xlims <- as.Date(c('1976-10-01', '2014-10-01'))

mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = "#7BCCC4"),
    panel.grid.minor = element_blank(), 
    plot.margin = unit(c(3, 3, 3, 3), 'pt')
  )   

##
# annual clam time series
p1 <- ggplot(clmdat, aes(x = yr, y = clams_smp, fill = species)) + 
  geom_bar(stat = 'identity') + 
  mytheme + 
  theme(
    legend.position = 'top', 
    legend.title = element_blank(),
    axis.title.x = element_blank()
    ) + 
  scale_fill_brewer(
    palette = 'Set2',
    labels = parse(text = c('italic(Corbicula)', 'italic(Potamocorbula)'))
    ) + 
  scale_x_date('Year', limits = xlims) +
  scale_y_continuous('Clams per sample') +
  guides(fill = guide_legend(keywidth = 0.5, keyheight = 0.5))

pdf('fig/d7clam.pdf', height = 2.5, width = 8.5, family = 'serif')
p1
dev.off()

data(h3dat)

# separate each site
toplo1 <- filter(h3dat, Site_Code %in% 'D7')

# y axis labels
ylab1 <- expression(paste("DIN (mg ", L^-1, ")"))
ylab2 <- expression(paste("Chl-", italic(a), " (", italic(mu), "g ", L^-1, ")"))
ylab3 <- expression(paste("Si", O[2], " (mg ", L^-1, ")"))

# colors
cols <- RColorBrewer::brewer.pal(9, 'Set1')[1:3]
col_vec <- RColorBrewer::brewer.pal(9, 'Blues')[c(9, 8, 7)]

## first set of plots
pdin1 <- prdnrmplot(toplo1$mod[[2]], col_vec = col_vec, logspace = F, min_mo = 10) +
  mytheme + 
  scale_y_continuous(ylab1) +
  theme(
    legend.position = 'none', 
    axis.title.x = element_blank()
    )

pchl1 <- prdnrmplot(toplo1$mod[[1]], col_vec = col_vec, logspace = F, min_mo = 10) +
  mytheme + 
  theme(
    legend.position = 'none', 
    axis.title.x = element_blank()
    ) + 
  scale_y_continuous(ylab2)

psio1 <- prdnrmplot(toplo1$mod[[3]], col_vec = col_vec, logspace = F, min_mo = 10) +
  mytheme + 
  theme(
    legend.position = 'none', 
    axis.title.x = element_blank()
    ) +
  scale_y_continuous(ylab3)

# Set the widths
pA1 <- ggplot_gtable(ggplot_build(pdin1))
pB1 <- ggplot_gtable(ggplot_build(pchl1))
pC1 <- ggplot_gtable(ggplot_build(psio1))
maxWidth = unit.pmax(pA1$widths[2:3], pB1$widths[2:3], pC1$widths[2:3])
pA1$widths[2:3] <- maxWidth
pB1$widths[2:3] <- maxWidth
pC1$widths[2:3] <- maxWidth

pdf('fig/d7prdnrm.pdf', height = 2, width = 4, family = 'serif')
grid.arrange(pA1)
grid.arrange(pB1)
grid.arrange(pC1)
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Selected case studies}}{\textbf{Effects of biological invasion in Suisun Bay}}
\vspace{-0.1in}
\onslide<1->
\begin{figure}
\centerline{\includegraphics[width = \textwidth]{fig/d7clam.pdf}}
\caption{Clam density by year at D7, Suisun Bay \cite{Crauder16}.}
\end{figure}
\vspace{-0.1in}
\begin{columns}
\begin{column}{0.35\textwidth}
\onslide<2->{
\includegraphics[width = \textwidth, page = 2]{fig/d7prdnrm.pdf}
}
\end{column}
\begin{column}{0.35\textwidth}
\onslide<3->{
\includegraphics[width = \textwidth, page = 1]{fig/d7prdnrm.pdf}
}
\end{column}
\begin{column}{0.35\textwidth}
\onslide<4->{
\includegraphics[width = \textwidth, page = 3]{fig/d7prdnrm.pdf}
}
\end{column}
\end{columns}
\vspace{-0.2in}
\onslide<2->
\begin{figure}
\caption{Annual predicted (points) and flow-normalized (lines) water quality data at D7.}
\end{figure}
\end{frame}

<<echo = F, cache = TRUE, eval = F, message = F, results = 'hide'>>=

# clam and model data at D7
data(clams)
data(h3dat)
data(flow_dat)
chld7 <- filter(h3dat, Site_Code %in% 'D7' & resvar %in% 'chl')$mod[[1]]

clmdat <- group_by(clams, yr, species) %>% 
  dplyr::summarize(
    clams_smp = mean(clams_smp, na.rm = TRUE),
    biomass = mean(biomass, na.rm = TRUE)
    ) %>% 
  ungroup %>% 
  mutate(yr = as.Date(paste0(yr, '-10-01')))

# make sure date range is same on both
xlims <- as.Date(c('1976-10-01', '2014-10-01'))

mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = "#7BCCC4"),
    panel.grid.minor = element_blank(), 
    plot.margin = unit(c(3, 3, 3, 3), 'pt')
  )   

##
# clam biomass related to daily sacramento flow
clmdat <- group_by(clams, yr, species) %>% 
  dplyr::summarize(
    clams_smp = mean(clams_smp, na.rm = TRUE),
    biomass = mean(biomass, na.rm = TRUE)
    ) %>% 
  ungroup %>% 
  mutate(yr = as.Date(paste0(yr, '-10-01')))

flodat <- filter(flow_dat, station %in% 'sac')
clmflo <- select(clams, biomass, clams_smp, species, date) %>% 
  rename(Date = date) %>% 
  left_join(., flodat, by = 'Date') %>% 
  filter(species %in% 'Potamocorbula')

# linear model of concentration x biomass
mod <- lm(log(1 + biomass) ~ log(1 + q), data = clmflo) %>% 
  coefficients
xvals <- range(clmflo$q, na.rm = TRUE)
xvals <- seq(xvals[1], xvals[2], length = 100)
yvals <- (exp(mod[1] + mod[2] * log(1 + xvals))) - 1

ylab <- expression(paste(italic(Potamocorbula), " biomass (g ", m^-2, ")"))
xlab <- expression(paste("Sacramento daily flow (", m^3, ' ', s^-1, ")"))

# scatter plot of concentration x biomass with model 
p1 <- ggplot(clmflo, aes(x = q, y = biomass)) + 
  geom_point(size = 3, alpha = 0.8, colour = 'darkgrey') + 
  geom_line(data = data.frame(x = xvals, y = yvals), aes(x, y, colour = 'black'), lwd = 1) +
  mytheme +
  theme(
    legend.position = 'top', 
    legend.title = element_blank(), 
    legend.box = 'horizontal'
    ) +
  scale_colour_manual(label = 'log(1 + biomass) = 5.2 - 0.6log(1 + flow)', values = 'black') +
  scale_x_continuous(xlab) + 
  scale_y_continuous(ylab, limits = c(0,15))

##
# chlorophyll by month
chldat <- filter(h3dat, resvar %in% 'chl' & Site_Code %in% 'D7') %>% 
  .$mod %>% 
  .[[1]] %>% 
  select(year, month, res, bt_norm) %>% 
  mutate(res = exp(res)) %>% 
  rename(yr = year, mo = month, bt_res = res) %>% 
  group_by(yr, mo) %>% 
  dplyr::summarize(res = mean(bt_res, na.rm = TRUE), bt_norm = mean(bt_norm, na.rm = TRUE)) %>% 
  ungroup

# clam by month
clmdat <- mutate(clams, mo = lubridate::month(date)) %>% 
  group_by(yr, mo, species) %>% 
  dplyr::summarize(
    clams_smp = mean(clams_smp, na.rm = TRUE),
    biomass = mean(biomass, na.rm = TRUE)
    ) %>% 
  ungroup %>% 
  filter(species %in% 'Potamocorbula')

# combine chlorophyll and clam by year, month
toplo <- left_join(clmdat, chldat, by = c('yr', 'mo')) %>% 
  mutate(date = as.Date(paste0(yr, '-', mo, '-01')))

# linear model of concentration x biomass
mod <- lm(log(1 + bt_norm) ~ log(1 + biomass), data = toplo) %>% 
  coefficients
xvals <- range(toplo$biomass, na.rm = TRUE)
xvals <- seq(xvals[1], xvals[2], length = 100)
yvals <- (exp(mod[1] + mod[2] * log(1 + xvals))) - 1

xlab <- expression(paste(italic(Potamocorbula), " biomass (g ", m^-2, ")"))
ylab <- expression(paste("Flow-normalized chlorophyll (", italic(mu), "g ", L^-1, ")"))

# scatter plot of concetration x biomass with model 
p2 <- ggplot(toplo, aes(x = biomass, y = bt_norm)) + 
  geom_point(size = 3, alpha = 0.8, colour = 'darkgrey') + 
  geom_line(data = data.frame(x = xvals, y = yvals), aes(x, y, colour = 'black'), lwd = 1) +
  mytheme + 
  theme(
    legend.position = 'top', 
    legend.title = element_blank(), 
    legend.box = 'horizontal'
    ) +
  scale_colour_manual(label = 'log(1 + chl) = 1.35 - 0.1log(1 + biomass)', values = 'black') +
  scale_x_continuous(xlab) + 
  scale_y_continuous(ylab, limits = c(0.8, 4))

##
# dynaplot for chl, june
cols <- RColorBrewer::brewer.pal(10, 'Set2')[1:2]
ylab <- attr(chld7, 'reslab')

p3 <- dynaplot(chld7, mo = 6, col_vec = cols, floscl = F) +
  mytheme +
  theme(
    legend.position = 'top', 
    legend.title = element_blank(), 
    legend.box = 'horizontal',
    strip.background = element_blank(),
    strip.text.x = element_blank()
    ) + 
  scale_x_reverse('ln-Salinity (psu)') + 
  scale_y_continuous(ylab, limits = c(0.4, 3.3)) +
  guides(colour = guide_colourbar(barheight = 0.5, barwidth = 10))

# align widths of plots in first column, first two
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
pC <- ggplot_gtable(ggplot_build(p3))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3], pC$widths[2:3])

# Set the widths
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth
pC$widths[2:3] <- maxWidth

pdf('fig/d7flos.pdf', height = 2.75, width = 4.25, family = 'serif')
grid.arrange(pA)
grid.arrange(pB)
grid.arrange(pC)
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Selected case studies}}{\textbf{Effects of biological invasion in Suisun Bay}}
\onslide<1->
\begin{columns}
\begin{column}{0.5\textwidth}
\centerline{\includegraphics[width = 0.95\textwidth, page = 3]{fig/d7flos.pdf}}
\end{column}
\begin{column}{0.5\textwidth}
\begin{itemize}
\item Early: Flushing \\~\\
\item Later: Flow-stimulation
\end{itemize}
\end{column}
\end{columns}
\begin{columns}
\begin{column}{0.5\textwidth}
\onslide<2->{
\centerline{\includegraphics[width = 0.95\textwidth, page = 2]{fig/d7flos.pdf}}
}
\end{column}
\begin{column}{0.5\textwidth}
\onslide<3->{
\centerline{\includegraphics[width = 0.95\textwidth, page = 1]{fig/d7flos.pdf}}
}
\end{column}
\end{columns}
\end{frame}

<<echo = F, cache = TRUE, eval = F, message = F, results = 'hide'>>=

# clam and model data at D7
data(clams)
data(h3dat)
data(flow_dat)
chld7 <- filter(h3dat, Site_Code %in% 'D7' & resvar %in% 'chl')$mod[[1]]

clmdat <- group_by(clams, yr, species) %>% 
  dplyr::summarize(
    clams_smp = mean(clams_smp, na.rm = TRUE),
    biomass = mean(biomass, na.rm = TRUE)
    ) %>% 
  ungroup %>% 
  mutate(yr = as.Date(paste0(yr, '-10-01')))

# make sure date range is same on both
xlims <- as.Date(c('1976-10-01', '2014-10-01'))

mytheme <- theme_minimal() + 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA),
    axis.line.x = element_line(), 
    axis.line.y = element_line(), 
    axis.ticks.x = element_line(),
    axis.ticks.y = element_line(),
    axis.ticks.length = unit(.1, "cm"), 
    panel.grid.major = element_line(colour = "#7BCCC4"),
    panel.grid.minor = element_blank(), 
    plot.margin = unit(c(3, 3, 3, 3), 'pt'), 
    axis.title.x = element_blank()
  )   

##
# annual clam time series
p1 <- ggplot(clmdat, aes(x = yr, y = clams_smp, fill = species)) + 
  geom_bar(stat = 'identity') + 
  mytheme + 
  theme(
    legend.position = c(0.22, 0.82), 
    legend.title = element_blank(),
    axis.title.x = element_blank(),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    legend.direction = 'horizontal'
    ) + 
  scale_fill_brewer(
    palette = 'Set2',
    labels = parse(text = c('italic(Corbicula)', 'italic(Potamocorbula)'))
    ) + 
  scale_x_date('Year', limits = xlims) +
  scale_y_continuous('Clams per sample') +
  guides(fill = guide_legend(keywidth = 0.5, keyheight = 0.5))

# separate each site
toplo1 <- filter(h3dat, Site_Code %in% 'D7')

# y axis labels
ylab <- expression(paste("Chl-", italic(a), " (", italic(mu), "g ", L^-1, ")"))

# colors
cols <- RColorBrewer::brewer.pal(9, 'Set1')[1:3]
col_vec <- RColorBrewer::brewer.pal(9, 'Blues')[c(9, 8, 7)]

##
# chlorophyll prdnrmplot
p2 <- prdnrmplot(toplo1$mod[[1]], col_vec = col_vec, logspace = F, min_mo = 10) +
  mytheme + 
  theme(
    legend.position = 'none'
    ) + 
  scale_y_continuous(ylab) + 
  scale_x_date(limits = xlims)

## flo with loess
flow_dat <- mutate(flow_dat, 
    year = year(Date), 
    month = month(Date)
  ) %>% 
  group_by(year, month) %>% 
  summarise(q = mean(q, na.rm = T)) %>% 
  unite('Date', year:month, sep = '-') %>% 
  mutate(
    Date = paste0(Date, '-01'), 
    Date = as.Date(Date, format = '%Y-%m-%d')
  ) %>% 
  arrange(Date)
  
ylab <- expression(paste('ln-Flow (', m^3, ' ', s^-1, ')'))
p3 <- ggplot(flow_dat, aes(x = Date, y = log(q))) + 
  geom_line() +
  stat_smooth(se = F, span = 0.25) + 
  mytheme + 
  scale_y_continuous(ylab) +
  scale_x_date(limits = xlims)

# Set the widths
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
pC <- ggplot_gtable(ggplot_build(p3))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3], pC$widths[2:3])
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth
pC$widths[2:3] <- maxWidth

pdf('fig/d7links.pdf', height = 1.5, width = 7.5, family = 'serif')
grid.arrange(pA)
grid.arrange(pB)
grid.arrange(pC)
dev.off()
@

%%%%%%
\begin{frame}{\textbf{Selected case studies}}{\textbf{Effects of biological invasion in Suisun Bay}}
\onslide<1->
\centerline{\includegraphics[width = 0.97\textwidth, page = 1]{fig/d7links.pdf}}
\onslide<2->
\centerline{\includegraphics[width = 0.97\textwidth, page = 2]{fig/d7links.pdf}}
\onslide<3->
\centerline{\includegraphics[width = 0.97\textwidth, page = 3]{fig/d7links.pdf}}
\end{frame}

%%%%%%
\begin{frame}[t]{\textbf{Selected case studies}}{\textbf{Effects of biological invasion in Suisun Bay}}
\onslide<1->
Results at D7 show complex response of chlorophyll:
\vspace{0.05in}
\begin{columns}[t]
\begin{column}{0.5\textwidth}
\vspace{0.2in}
\begin{itemize}
\onslide<1->{
\item Increase in clam abundance, decrease in chlorophyll \\~\\
\item Increase in DIN... but also increase in SiO$_2$ \\~\\
}
\onslide<2->{
\item Relationship with flow changed depending on physical or biological forcing
}
\end{itemize}
\end{column}
\begin{column}{0.25\textwidth}

\includegraphics<1>[width = \textwidth, trim = 0mm -10mm 0mm 0mm, clip, page = 2]{fig/d7prdnrm.pdf}

\includegraphics<1>[width = \textwidth, trim = 0mm -10mm 0mm 0mm, clip, page = 1]{fig/d7prdnrm.pdf}

\includegraphics<1>[width = \textwidth, trim = 0mm -10mm 0mm 0mm, clip, page = 3]{fig/d7prdnrm.pdf}
\includegraphics<2>[width = \textwidth, page = 3]{fig/d7flos.pdf}

\includegraphics<2>[width = \textwidth, page = 2]{fig/d7flos.pdf}

\includegraphics<2>[width = \textwidth, page = 1]{fig/d7flos.pdf}
\end{column}
\end{columns}
\end{frame}

\section{Reaching the management community}

%%%%%%
\begin{frame}{\textbf{Conclusions}}{\textbf{Lessons for monitoring and future work}}
\onslide<+->
Monitoring data are not particularly telling... \\
...so we use models or other methods to \emtxt{decompose} the observations \\~\\
\onslide<+->
But we need to communicate these results to the management community and other decision makers\\~\\
\onslide<+->
\begin{exampleblock}{}
  {\large ``Don't give me another 500-page report, I won't read t.''}
  \vskip5mm
  \hspace*\fill{\small--- Overheard at recent meeting}
\end{exampleblock}
\end{frame}

%%%%%%
\begin{frame}{\textbf{An Open Science paradigm}}{\textbf{Bridge the research-management divide}}
\begin{center}
\includegraphics[width = \textwidth]{fig/opensci.png}
\end{center}
\end{frame}

%%%%%%
\begin{frame}{\textbf{An Open Science paradigm}}{\textbf{Bridge the research-management divide}}
\centerline{Make your methods accessible!}
\centerline{{\small \url{https://cran.r-project.org/web/packages/WRTDStidal/index.html}}}
\begin{center}
\fbox{\includegraphics[width = 0.9\textwidth]{fig/wrtdstidal.png}}
\end{center}
\end{frame}

%%%%%%
\begin{frame}{\textbf{An Open Science paradigm}}{\textbf{Bridge the research-management divide}}
\centerline{Make your methods transparent!}
\centerline{{\small \url{https://github.com/fawda123/WRTDStidal}}}
\begin{center}
\fbox{\includegraphics[width = 0.9\textwidth]{fig/wrtdstidalgit.png}}
\end{center}
\end{frame}

%%%%%%
\begin{frame}{\textbf{An Open Science paradigm}}{\textbf{Bridge the research-management divide}}
\centerline{Communicate your results!}
\centerline{{\small \url{https://beckmw.shinyapps.io/sf_trends/}}}
\begin{center}
\fbox{\includegraphics[width = 0.9\textwidth]{fig/shinyex.png}}
\end{center}
\end{frame}

%%%%%%
\begin{frame}{\textbf{An Open Science paradigm}}{\textbf{Bridge the research-management divide}}
\centerline{Communicate your results!}
\centerline{{\small \url{https://sccwrp.shinyapps.io/sfbaytrends/}}}
\begin{center}
\fbox{\includegraphics[width = 0.8\textwidth]{fig/sfbaytrends.png}}
\end{center}
\end{frame}

\section{Conclusions}

%%%%%%
\begin{frame}{\textbf{Conclusions}}{\textbf{Lessons for data scientists}}
\onslide<+->
Science (and data science) is a tool that is a means to an end... \\
...it is not an end in itself \\~\\
\onslide<+->
How do you use your products to reach those that need it? \\~\\
\onslide<+->
\begin{itemize}
\item Use relevant methods within the scope of your question
\item Strive for transparency, reproducibility, and accessibility
\item Use open source tools with vibrant user communities
\item Be a champion within your institution to promote open science
\end{itemize}
\end{frame}

%%%%%%
\begin{frame}
Acknowledgments and contact info:\\~\\
\begin{columns}
\begin{column}{0.9\textwidth}
{\footnotesize
Research staff and employees at USEPA Gulf Ecology Division, San Francisco Estuary Institute, Southern California Coastal Water Research Project \\~\\
David Senn, Thomas Jabusch, Phil Bresnahan, Emily Novick
}
\end{column}
\end{columns}
\vfill
\begin{columns}
\begin{column}{0.7\textwidth}
\begin{center}
\includegraphics[width=0.3\linewidth]{fig/epa_logo.png}
\hfill
\includegraphics[width=0.3\linewidth]{fig/sfei1.png}
\hfill
\includegraphics[width=0.3\linewidth]{fig/sfei2.png}
\end{center}
\end{column}
\begin{column}{0.3\textwidth}
\scriptsize
\begin{center}
\href{mailto:marcusb@sccwrp.org}{marcusb@sccwrp.org} \\~\\
Phone (SCCWRP): 7147553217
\end{center}
\end{column}
\end{columns}
\vfill
Links:\\~\\
\begin{columns}
\begin{column}{0.9\textwidth}
\scriptsize
This presentation: \href{https://github.com/fawda123/sfei_pres}{\url{https://github.com/fawda123/sfei\_pres}}

Shiny app: \href{https://beckmw.shinyapps.io/sf_trends/}{\url{https://beckmw.shinyapps.io/sf_trends/}}

Detailed results: \href{http://fawda123.github.io/sf_trends/README}{\url{http://fawda123.github.io/sf\_trends/README}}

Manuscript: \href{http://fawda123.github.io/sftrends_manu}{\url{http://fawda123.github.io/sftrends\_manu}}
\end{column}
\end{columns}
\end{frame}

%%%%%%
\section{References}
\begin{frame}[t]{\textbf{References}}
\tiny
\setbeamertemplate{bibliography item}{}
\bibliographystyle{apalike_mine}
\bibliography{refs}
\end{frame}

\end{document}